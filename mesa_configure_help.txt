`configure' configures Mesa 19.0.5 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/mesa]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-autotools      Enable the use of this autotools based build
                          configuration
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-largefile     omit support for large files
  --enable-static[=PKGS]  build static libraries [default=no]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-pwr8          disable POWER8-specific instructions
  --enable-debug          use debug compiler flags and macros
                          [default=disabled]
  --enable-profile        enable profiling of code [default=disabled]
  --enable-sanitize[=address|undefined]
                          enable code sanitizer [default=disabled]
  --disable-asm           disable assembly usage [default=enabled on supported
                          platforms]
  --enable-selinux        Build SELinux-aware Mesa [default=disabled]
  --enable-llvm-shared-libs
                          link with LLVM shared libraries [default=enabled]
  --enable-libunwind      Use libunwind for backtracing (default: auto)
  --disable-opengl        disable support for standard OpenGL API
                          [default=enabled]
  --disable-gles1         disable support for OpenGL ES 1.x API
                          [default=enabled]
  --disable-gles2         disable support for OpenGL ES 2.x API
                          [default=enabled]
  --enable-dri            enable DRI modules [default=enabled]
  --enable-gallium-extra-hud
                          enable HUD block/NIC I/O HUD stats support
                          [default=disabled]
  --enable-lmsensors      enable HUD lmsensor support [default=disabled]
  --enable-dri3           enable DRI3 [default=auto]
  --enable-glx[=dri|xlib|gallium-xlib]
                          enable the GLX library and choose an implementation
                          [default=auto]
  --enable-osmesa         enable OSMesa library [default=disabled]
  --enable-gallium-osmesa enable Gallium implementation of the OSMesa library
                          [default=disabled]
  --disable-egl           disable EGL library [default=enabled]
  --enable-xa             enable build of the XA X Acceleration API
                          [default=disabled]
  --enable-gbm            enable gbm library [default=yes except cygwin and
                          macOS]
  --enable-nine           enable build of the nine Direct3D9 API [default=no]
  --enable-xvmc           enable xvmc library [default=auto]
  --enable-vdpau          enable vdpau library [default=auto]
  --enable-omx            DEPRECATED: Use --enable-omx-bellagio or
                          --enable-omx-tizonia instead [default=auto]
  --enable-omx-bellagio   enable OpenMAX Bellagio library [default=disabled]
  --enable-omx-tizonia    enable OpenMAX Tizonia library [default=disabled]
  --enable-va             enable va library [default=auto]
  --enable-opencl         enable OpenCL library [default=disabled]
  --enable-opencl-icd     Build an OpenCL ICD library to be loaded by an ICD
                          implementation [default=enabled]
  --enable-gallium-tests  Enable optional Gallium tests) [default=disabled]
  --enable-libglvnd       Build GLX and EGL for libglvnd [default=disabled]
  --enable-mangling       enable mangled symbols and library name
                          [default=disabled]
  --enable-shared-glapi   Enable shared glapi for OpenGL [default=enabled]
  --disable-driglx-direct disable direct rendering in GLX and EGL for DRI
                          [default=enabled]
  --enable-glx-tls        enable TLS support in GLX [default=enabled]
  --enable-glx-read-only-text
                          Disable writable .text section on x86 (decreases
                          performance) [default=disabled]
  --enable-xlib-lease
                    enable VK_acquire_xlib_display using X leases

  --enable-gallium-llvm   DEPRECATED: use --enable-llvm instead
  --enable-llvm           build with LLVM support [default=enabled on
                          x86/x86_64]
  --enable-valgrind       Build mesa with valgrind support (default: auto)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-llvm-prefix      Prefix for LLVM installations in non-standard
                          locations
  --with-gallium-drivers[=DIRS...]
                          comma delimited Gallium drivers list, e.g.
                          "i915,nouveau,r300,r600,radeonsi,freedreno,kmsro,svga,swrast,swr,tegra,v3d,vc4,virgl,etnaviv"
                          [default=r300,r600,svga,swrast]
  --with-gl-lib-name[=NAME]
                          specify GL library name [default=GL]
  --with-osmesa-lib-name[=NAME]
                          specify OSMesa library name [default=OSMesa]
  --with-egl-platforms[=DIRS...]
                          DEPRECATED: use --with-platforms
                          instead[default=auto]
  --with-platforms[=DIRS...]
                          comma delimited native platforms libEGL/Vulkan/other
                          supports, e.g. "x11,drm,wayland,surfaceless..."
                          [default=auto]
  --with-dri-driverdir=DIR
                          directory for the DRI drivers [${libdir}/dri]
  --with-dri-searchpath=DIRS...
                          semicolon delimited DRI driver search directories
                          [${libdir}/dri]
  --with-dri-drivers[=DIRS...]
                          comma delimited classic DRI drivers list, e.g.
                          "i915,i965,nouveau,radeon,r200,swrast"
                          [default=auto]
  --with-vulkan-drivers[=DIRS...]
                          comma delimited Vulkan drivers list, e.g.
                          "intel,radeon" [default=no]
  --with-vulkan-icddir=DIR
                          directory for the Vulkan driver icd files
                          [${datarootdir}/vulkan/icd.d]
  --with-osmesa-bits=BITS OSMesa channel bits and library name: 8, 16, 32
                          [default=8]
  --with-clang-libdir     Path to Clang libraries [default=llvm-config
                          --libdir]
  --with-xvmc-libdir=DIR  directory for the XVMC libraries [default=${libdir}]
  --with-vdpau-libdir=DIR directory for the VDPAU libraries
                          [default=${libdir}/vdpau]
  --with-omx-bellagio-libdir=DIR
                          directory for the OMX_BELLAGIO libraries
  --with-omx-tizonia-libdir=DIR
                          directory for the OMX_TIZONIA libraries
  --with-va-libdir=DIR    directory for the VA libraries [${libdir}/dri]
  --with-d3d-libdir=DIR   directory for the D3D modules [${libdir}/d3d]
  --with-swr-archs[=DIRS...]
                          comma delimited swr architectures list, e.g.
                          "avx,avx2,knl,skx" [default="avx,avx2"]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXX11_CXXFLAGS
              Compiler flag to enable C++11 support (only needed if not
              enabled by default and different from -std=c++11)
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
  PYTHON      the Python interpreter
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  CXXCPP      C++ preprocessor
  YACC        The `Yet Another Compiler Compiler' implementation to use.
              Defaults to the first program found out of: `bison -y', `byacc',
              `yacc'.
  YFLAGS      The list of arguments that will be passed by default to $YACC.
              This script will default YFLAGS to the empty string to avoid a
              default value of `-d' given by some make applications.
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  ZLIB_CFLAGS C compiler flags for ZLIB, overriding pkg-config
  ZLIB_LIBS   linker flags for ZLIB, overriding pkg-config
  PTHREADSTUBS_CFLAGS
              C compiler flags for PTHREADSTUBS, overriding pkg-config
  PTHREADSTUBS_LIBS
              linker flags for PTHREADSTUBS, overriding pkg-config
  SELINUX_CFLAGS
              C compiler flags for SELINUX, overriding pkg-config
  SELINUX_LIBS
              linker flags for SELINUX, overriding pkg-config
  LIBELF_CFLAGS
              C compiler flags for LIBELF, overriding pkg-config
  LIBELF_LIBS linker flags for LIBELF, overriding pkg-config
  LIBUNWIND_CFLAGS
              C compiler flags for LIBUNWIND, overriding pkg-config
  LIBUNWIND_LIBS
              linker flags for LIBUNWIND, overriding pkg-config
  GLVND_CFLAGS
              C compiler flags for GLVND, overriding pkg-config
  GLVND_LIBS  linker flags for GLVND, overriding pkg-config
  LIBDRM_CFLAGS
              C compiler flags for LIBDRM, overriding pkg-config
  LIBDRM_LIBS linker flags for LIBDRM, overriding pkg-config
  GLPROTO_CFLAGS
              C compiler flags for GLPROTO, overriding pkg-config
  GLPROTO_LIBS
              linker flags for GLPROTO, overriding pkg-config
  XLIBGL_CFLAGS
              C compiler flags for XLIBGL, overriding pkg-config
  XLIBGL_LIBS linker flags for XLIBGL, overriding pkg-config
  DRI2PROTO_CFLAGS
              C compiler flags for DRI2PROTO, overriding pkg-config
  DRI2PROTO_LIBS
              linker flags for DRI2PROTO, overriding pkg-config
  DRIGL_CFLAGS
              C compiler flags for DRIGL, overriding pkg-config
  DRIGL_LIBS  linker flags for DRIGL, overriding pkg-config
  WAYLAND_CLIENT_CFLAGS
              C compiler flags for WAYLAND_CLIENT, overriding pkg-config
  WAYLAND_CLIENT_LIBS
              linker flags for WAYLAND_CLIENT, overriding pkg-config
  WAYLAND_SERVER_CFLAGS
              C compiler flags for WAYLAND_SERVER, overriding pkg-config
  WAYLAND_SERVER_LIBS
              linker flags for WAYLAND_SERVER, overriding pkg-config
  WAYLAND_PROTOCOLS_CFLAGS
              C compiler flags for WAYLAND_PROTOCOLS, overriding pkg-config
  WAYLAND_PROTOCOLS_LIBS
              linker flags for WAYLAND_PROTOCOLS, overriding pkg-config
  WAYLAND_EGL_CFLAGS
              C compiler flags for WAYLAND_EGL, overriding pkg-config
  WAYLAND_EGL_LIBS
              linker flags for WAYLAND_EGL, overriding pkg-config
  WAYLAND_SCANNER_CFLAGS
              C compiler flags for WAYLAND_SCANNER, overriding pkg-config
  WAYLAND_SCANNER_LIBS
              linker flags for WAYLAND_SCANNER, overriding pkg-config
  XCB_DRI2_CFLAGS
              C compiler flags for XCB_DRI2, overriding pkg-config
  XCB_DRI2_LIBS
              linker flags for XCB_DRI2, overriding pkg-config
  ANDROID_CFLAGS
              C compiler flags for ANDROID, overriding pkg-config
  ANDROID_LIBS
              linker flags for ANDROID, overriding pkg-config
  BACKTRACE_CFLAGS
              C compiler flags for BACKTRACE, overriding pkg-config
  BACKTRACE_LIBS
              linker flags for BACKTRACE, overriding pkg-config
  XCB_DRI3_CFLAGS
              C compiler flags for XCB_DRI3, overriding pkg-config
  XCB_DRI3_LIBS
              linker flags for XCB_DRI3, overriding pkg-config
  XCB_DRI3_MODIFIERS_CFLAGS
              C compiler flags for XCB_DRI3_MODIFIERS, overriding pkg-config
  XCB_DRI3_MODIFIERS_LIBS
              linker flags for XCB_DRI3_MODIFIERS, overriding pkg-config
  XCB_RANDR_CFLAGS
              C compiler flags for XCB_RANDR, overriding pkg-config
  XCB_RANDR_LIBS
              linker flags for XCB_RANDR, overriding pkg-config
  XLIB_RANDR_CFLAGS
              C compiler flags for XLIB_RANDR, overriding pkg-config
  XLIB_RANDR_LIBS
              linker flags for XLIB_RANDR, overriding pkg-config
  EXPAT_CFLAGS
              C compiler flags for EXPAT, overriding pkg-config
  EXPAT_LIBS  linker flags for EXPAT, overriding pkg-config
  I915_CFLAGS C compiler flags for I915, overriding pkg-config
  I915_LIBS   linker flags for I915, overriding pkg-config
  NVVIEUX_CFLAGS
              C compiler flags for NVVIEUX, overriding pkg-config
  NVVIEUX_LIBS
              linker flags for NVVIEUX, overriding pkg-config
  RADEON_CFLAGS
              C compiler flags for RADEON, overriding pkg-config
  RADEON_LIBS linker flags for RADEON, overriding pkg-config
  AMDGPU_CFLAGS
              C compiler flags for AMDGPU, overriding pkg-config
  AMDGPU_LIBS linker flags for AMDGPU, overriding pkg-config
  VL_CFLAGS   C compiler flags for VL, overriding pkg-config
  VL_LIBS     linker flags for VL, overriding pkg-config
  XVMC_CFLAGS C compiler flags for XVMC, overriding pkg-config
  XVMC_LIBS   linker flags for XVMC, overriding pkg-config
  VDPAU_CFLAGS
              C compiler flags for VDPAU, overriding pkg-config
  VDPAU_LIBS  linker flags for VDPAU, overriding pkg-config
  OMX_BELLAGIO_CFLAGS
              C compiler flags for OMX_BELLAGIO, overriding pkg-config
  OMX_BELLAGIO_LIBS
              linker flags for OMX_BELLAGIO, overriding pkg-config
  OMX_TIZONIA_CFLAGS
              C compiler flags for OMX_TIZONIA, overriding pkg-config
  OMX_TIZONIA_LIBS
              linker flags for OMX_TIZONIA, overriding pkg-config
  VA_CFLAGS   C compiler flags for VA, overriding pkg-config
  VA_LIBS     linker flags for VA, overriding pkg-config
  NOUVEAU_CFLAGS
              C compiler flags for NOUVEAU, overriding pkg-config
  NOUVEAU_LIBS
              linker flags for NOUVEAU, overriding pkg-config
  ETNAVIV_CFLAGS
              C compiler flags for ETNAVIV, overriding pkg-config
  ETNAVIV_LIBS
              linker flags for ETNAVIV, overriding pkg-config
  VC4_CFLAGS  C compiler flags for VC4, overriding pkg-config
  VC4_LIBS    linker flags for VC4, overriding pkg-config
  SIMPENROSE_CFLAGS
              C compiler flags for SIMPENROSE, overriding pkg-config
  SIMPENROSE_LIBS
              linker flags for SIMPENROSE, overriding pkg-config
  V3D_SIMULATOR_CFLAGS
              C compiler flags for V3D_SIMULATOR, overriding pkg-config
  V3D_SIMULATOR_LIBS
              linker flags for V3D_SIMULATOR, overriding pkg-config
  VALGRIND_CFLAGS
              C compiler flags for VALGRIND, overriding pkg-config
  VALGRIND_LIBS
              linker flags for VALGRIND, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

See docs/autoconf.html for more details on the options for Mesa.

Report bugs to <https://bugs.freedesktop.org/enter_bug.cgi?product=Mesa>.
